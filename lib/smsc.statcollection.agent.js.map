{"version":3,"file":"smsc.statcollection.agent.js","sourceRoot":"","sources":["smsc.statcollection.agent.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qDAA+C;AAE/C,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,qCAAqC;AACrC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AAC1B,4BAA4B;AAC5B,2CAA8C;AAS9C;IAMI;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,6BAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,8BAAa,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAED,IAAI;QACA,WAAW,CAAC;YACR,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC,CAAA,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,CAAA;IAC5D,CAAC;IAED,KAAK;QACD,WAAW,CAAC;YACR,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAO,IAAI;gBAC1B,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAA,CAAC,CAAC;QACP,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,CAAA;IACpD,CAAC;IAEK,IAAI,CAAC,IAAU;;YAEjB,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEvD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,EAAE;gBACpC,MAAM,EAAE,KAAK,CAAC,WAAW;gBACzB,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,YAAY,EAAE,KAAK,CAAC,eAAe;gBACnC,WAAW,EAAE,KAAK,CAAC,cAAc;aACpC,EACD;gBACI,KAAK,EAAE,IAAI,CAAC,IAAI;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,EAAE;gBACpC,YAAY,EAAE,KAAK,CAAC,eAAe;gBACnC,WAAW,EAAE,KAAK,CAAC,cAAc;aACpC,EACD;gBACI,KAAK,EAAE,IAAI,CAAC,IAAI;aACnB,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sBAAsB,EAAE;gBACtC,WAAW,EAAE,KAAK,CAAC,WAAW;aACjC,EACD;gBACI,KAAK,EAAE,IAAI,CAAC,IAAI;aACnB,CAAC,CAAC;QAEP,CAAC;KAAA;IAEK,QAAQ;;YACV,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAElC,IAAI,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEvE,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI;gBAEf,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE5B,KAAK,CAAC,IAAI,CAAC;oBACP,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;iBACrB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;KAAA;CAEJ;AA3ED,0DA2EC","sourcesContent":["import {StatCollector} from \"./stat.collector\";\n\nlet fs = require('fs');\nimport * as Bluebird from 'bluebird';\nBluebird.promisifyAll(fs);\nimport * as _ from 'lodash';\nimport {SMSCStatCollector} from \"./smsc.stat\";\n\n\n\nexport interface SMSC {\n    name: string,\n    adminURL: string;\n}\n\nexport class SmscStatcollectionAgent {\n\n    smscs: SMSC[];\n    statter: SMSCStatCollector;\n    reporter: StatCollector;\n\n    constructor() {\n        this.statter = new SMSCStatCollector();\n        this.reporter = StatCollector.getInstance();\n    }\n\n    init() {\n        setInterval(async () => {\n            this.smscs = await this.getSMSCS();\n        }, parseInt(process.env.SMSCS_UPDATE_INTERVAL) || 60000)\n    }\n\n    start() {\n        setInterval(() => {\n            _.each(this.smscs, async (smsc) => {\n                await this.poll(smsc);\n            });\n        }, parseInt(process.env.POLL_INTERVAL) || 10000)\n    }\n\n    async poll(smsc: SMSC) {\n\n        let stats = await this.statter.getStats(smsc.adminURL);\n\n        this.reporter.add('gallium.kannel.sms', {\n            queued: stats.queueLength,\n            sent: stats.sent,\n            outboundRate: stats.smsOutboundRate,\n            inboundRate: stats.smsInboundRate\n        },\n        {\n            route: smsc.name\n        });\n\n        this.reporter.add('gallium.kannel.dlr', {\n            outboundRate: stats.dlrOutboundRate,\n            inboundRate: stats.dlrInboundRate\n        },\n        {\n            route: smsc.name\n        });\n\n        this.reporter.add('gallium.kannel.binds', {\n            bindsOnline: stats.bindsOnline,\n        },\n        {\n            route: smsc.name\n        });\n\n    }\n\n    async getSMSCS(): Promise<SMSC[]> {\n        let smsc_file = process.env.SMSCS;\n\n        let parts = (await fs.readFileAsync(smsc_file)).toString().split(\"\\n\");\n\n        let smscs = [];\n        _.each(parts, (line) => {\n\n            let split = line.split(',');\n\n            smscs.push({\n                name: split[0],\n                adminURL: split[1]\n            });\n        });\n\n        return smscs;\n    }\n\n}"]}